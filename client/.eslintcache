[{"E:\\Web development\\Projects\\I'm blogger\\client\\src\\index.js":"1","E:\\Web development\\Projects\\I'm blogger\\client\\src\\App.js":"2","E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\Navbar.js":"3","E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\Home.js":"4","E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\auth\\Login.js":"5","E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\auth\\Register.js":"6","E:\\Web development\\Projects\\I'm blogger\\client\\src\\redux\\store.js":"7","E:\\Web development\\Projects\\I'm blogger\\client\\src\\redux\\reducers\\AuthReducer.js":"8","E:\\Web development\\Projects\\I'm blogger\\client\\src\\redux\\AsyncMethods\\userMethod.js":"9","E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\Private\\PrivateRoutes.js":"10","E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\Dashboard.js":"11","E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\Private\\ReactLinks.js":"12","E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\CreateBlog.js":"13","E:\\Web development\\Projects\\I'm blogger\\client\\src\\redux\\reducers\\postReducer.js":"14","E:\\Web development\\Projects\\I'm blogger\\client\\src\\redux\\AsyncMethods\\postBlog.js":"15","E:\\Web development\\Projects\\I'm blogger\\client\\src\\redux\\AsyncMethods\\fetchAllPost.js":"16","E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\Pagination.js":"17","E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\Editname.js":"18","E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\Sidebar.js":"19","E:\\Web development\\Projects\\I'm blogger\\client\\src\\redux\\AsyncMethods\\postNameMethod.js":"20","E:\\Web development\\Projects\\I'm blogger\\client\\src\\redux\\reducers\\ProfileReducer.js":"21","E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\Changepassword.js":"22","E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\DetailPost.js":"23","E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\Comments.js":"24","E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\auth\\Forget.js":"25"},{"size":218,"mtime":1624726614245,"results":"26","hashOfConfig":"27"},{"size":1677,"mtime":1629291908042,"results":"28","hashOfConfig":"27"},{"size":2225,"mtime":1627055676819,"results":"29","hashOfConfig":"27"},{"size":3802,"mtime":1627548606102,"results":"30","hashOfConfig":"27"},{"size":5608,"mtime":1629291749585,"results":"31","hashOfConfig":"27"},{"size":7093,"mtime":1625496180221,"results":"32","hashOfConfig":"27"},{"size":636,"mtime":1627308501126,"results":"33","hashOfConfig":"27"},{"size":2221,"mtime":1626962578298,"results":"34","hashOfConfig":"27"},{"size":2171,"mtime":1629296166946,"results":"35","hashOfConfig":"27"},{"size":371,"mtime":1625496051268,"results":"36","hashOfConfig":"27"},{"size":5371,"mtime":1627919964011,"results":"37","hashOfConfig":"27"},{"size":342,"mtime":1625234485590,"results":"38","hashOfConfig":"27"},{"size":8269,"mtime":1627544848068,"results":"39","hashOfConfig":"27"},{"size":1806,"mtime":1627910686886,"results":"40","hashOfConfig":"27"},{"size":923,"mtime":1627545927428,"results":"41","hashOfConfig":"27"},{"size":2815,"mtime":1627913503140,"results":"42","hashOfConfig":"27"},{"size":1061,"mtime":1627544190595,"results":"43","hashOfConfig":"27"},{"size":3780,"mtime":1627546947198,"results":"44","hashOfConfig":"27"},{"size":759,"mtime":1627391941934,"results":"45","hashOfConfig":"27"},{"size":2201,"mtime":1627546063633,"results":"46","hashOfConfig":"27"},{"size":388,"mtime":1627309634721,"results":"47","hashOfConfig":"27"},{"size":3907,"mtime":1627547214796,"results":"48","hashOfConfig":"27"},{"size":6123,"mtime":1627920043386,"results":"49","hashOfConfig":"27"},{"size":1466,"mtime":1627914818022,"results":"50","hashOfConfig":"27"},{"size":3437,"mtime":1629297136928,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"i8a7wi",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Web development\\Projects\\I'm blogger\\client\\src\\index.js",[],["108","109"],"E:\\Web development\\Projects\\I'm blogger\\client\\src\\App.js",[],"E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\Navbar.js",[],"E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\Home.js",["110"],"import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { allUposts } from '../redux/AsyncMethods/fetchAllPost'\r\nimport '../style/Home.css'\r\nimport { htmlToText } from 'html-to-text'\r\n\r\nimport { SemipolarLoading } from 'react-loadingg';\r\nimport Pagination from './Pagination'\r\n\r\n\r\nconst Home = () => {\r\n    let { page } = useParams()\r\n    const { loading } = useSelector((state) => (state.postReducer))\r\n    const { posts } = useSelector((state) => (state.getAllPostReducer))\r\n    const { count, per_page_post } = useSelector((state) => (state.getAllPostReducer))\r\n    const dispatch = useDispatch()\r\n    if (page === undefined) {\r\n        page = 1\r\n    }\r\n    useEffect(() => {\r\n        dispatch(allUposts(page));\r\n    }, [page])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"custome_container\">\r\n                {\r\n                    !loading ? posts.length > 0 ?\r\n                        <div className=\"container\">\r\n                            {posts.map((post) => {\r\n                                return <div className=\"card mb-1\" key={post._id}>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12 col-md-12 col-12 col-lg-8 blog_details\">\r\n\r\n                                            <div class=\"card-header avtar_header\">\r\n\r\n                                                <div className=\"avatar_section\">\r\n                                                    <span className=\"avatar_icon\">{post.user[0]}</span>\r\n                                                </div>\r\n                                                <div className=\"name_section\">\r\n                                                    <div className=\"avtar_name\">\r\n                                                        {post.user}\r\n                                                    </div>\r\n                                                    <span className=\"published_at\">Published at : 10:50:15</span>\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n                                            <div class=\"card-body\">\r\n                                                <h5 class=\"card-title\"><Link className=\"title_link\" to={`/detail/${ post._id }`}>{post.title}</Link></h5>\r\n                                                <p class=\"card-text\">{htmlToText(post.post_body.slice(0, 150))}</p>\r\n                                            </div>\r\n\r\n\r\n                                        </div>\r\n                                        <div className=\"col-4\">\r\n                                            <div className=\"image_section\">\r\n                                                <img src={`/images/${ post.image }`} alt=\"\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            })}\r\n                            {\r\n                                posts.length > 0 && page > 1 ?\r\n                                    <Pagination\r\n                                        count={count}\r\n                                        page={page}\r\n                                        pageLink={'/home'}\r\n                                        per_page_post={per_page_post}\r\n                                    /> : ''\r\n                            }\r\n                        </div> : 'not post yet' : <SemipolarLoading\r\n                        size=\"large\"\r\n                        className=\"check\"\r\n                    />\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n","E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\auth\\Login.js",[],"E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\auth\\Register.js",[],"E:\\Web development\\Projects\\I'm blogger\\client\\src\\redux\\store.js",[],"E:\\Web development\\Projects\\I'm blogger\\client\\src\\redux\\reducers\\AuthReducer.js",[],"E:\\Web development\\Projects\\I'm blogger\\client\\src\\redux\\AsyncMethods\\userMethod.js",[],"E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\Private\\PrivateRoutes.js",[],"E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\Dashboard.js",["111","112"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport { fetchAllPost } from \"../redux/AsyncMethods/fetchAllPost\";\r\nimport { SemipolarLoading } from 'react-loadingg';\r\nimport '../style/dashboard.css'\r\nimport Pagination from './Pagination'\r\nimport axios from \"axios\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport moment from \"moment\";\r\nimport { htmlToText } from 'html-to-text';\r\n\r\nconst Dashboard = (props) => {\r\n    const { redirect, message } = useSelector((state) => (state.postReducer));\r\n    const dispatch = useDispatch()\r\n    const { user: { _id }, token } = useSelector((state) => (state.AuthReducer))\r\n    const { posts, loading, count, per_page_post } = useSelector((state) => (state.getAllPostReducer))\r\n    const [copyText, setIscopyText] = useState(true)\r\n    let { page } = useParams()\r\n    if (page === undefined) {\r\n        page = 1;\r\n    }\r\n\r\n    const copyFunction = (index) => {\r\n\r\n        setIscopyText(false)\r\n        console.log(copyText);\r\n        // copy(posts[index].slug);\r\n    }\r\n\r\n    const deletePost = async (id) => {\r\n        console.log(id);\r\n        try {\r\n            const response = await axios.get(`/delete_post/${ id }`, {\r\n                headers: {\r\n                    authorization: `Bearer ${ token }`\r\n                }\r\n            })\r\n            console.log(response);\r\n            console.log(response.data.msg)\r\n            dispatch(fetchAllPost(_id, page));\r\n            dispatch({ type: 'SET_MESSAGE', payload: response.data.msg })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        dispatch(fetchAllPost(_id, page));\r\n    }, [page])\r\n\r\n\r\n    useEffect(() => {\r\n        if (redirect) {\r\n            dispatch({ type: 'REMOVE_ERRORS' })\r\n            dispatch({ type: 'REDIRECT_FALSE' })\r\n        }\r\n        if (message) {\r\n            toast.success(message, {\r\n                position: 'top-right',\r\n                autoClose: 2000,\r\n                hideProgressBar: true,\r\n                closeOnClick: false,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n            })\r\n            dispatch({ type: 'REMOVE_MESSAGE' })\r\n        }\r\n    }, [message, redirect, dispatch]);\r\n\r\n    // console.log(copyText);\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar\r\n                newestOnTop={false}\r\n                closeOnClick={false}\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <div className=\"custome_container mt-5\">\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-lg-3 mb-5 col-sm-12 col-md-12\">\r\n                        < Sidebar />\r\n                    </div>\r\n                    <div className=\"col-lg-9 col-sm-12 col-md-12\">\r\n                        {\r\n                            !loading ?\r\n                                posts.length > 0 ? posts.map((post, index) => (\r\n                                    (<div>\r\n                                        <div className=\"card mb-3\">\r\n                                            <div className=\"card-header\">\r\n                                                <Link to={`/detail/${ post._id }`} className=\"title_link text-dark fs-3 text-capitalize\">{post.title}</Link>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <h5 className=\"card-title post_title\">{htmlToText(post.post_body.substr(0, 50))}</h5>\r\n                                                <span className=\"relative_time\">{moment(post.updatedAt).fromNow()}</span>\r\n                                                <p className=\"card-text\">{post.decription}</p>\r\n                                                <button type=\"button\" class=\"mt-3 btn btn-primary\" onClick={() => deletePost(post._id)}>Delete Post</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>)\r\n                                )) : <h2>You have not created any post...</h2> :\r\n\r\n                                <SemipolarLoading\r\n                                    size=\"large\"\r\n                                    className=\"check\"\r\n                                />\r\n\r\n                        }\r\n                        {\r\n                            posts.length > 0 && !loading && page > 1 ?\r\n                                <Pagination\r\n                                    count={count}\r\n                                    page={page}\r\n                                    pageLink={'/dashboard'}\r\n                                    per_page_post={per_page_post}\r\n                                /> : ''\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\Private\\ReactLinks.js",[],"E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\CreateBlog.js",[],"E:\\Web development\\Projects\\I'm blogger\\client\\src\\redux\\reducers\\postReducer.js",[],"E:\\Web development\\Projects\\I'm blogger\\client\\src\\redux\\AsyncMethods\\postBlog.js",[],"E:\\Web development\\Projects\\I'm blogger\\client\\src\\redux\\AsyncMethods\\fetchAllPost.js",[],"E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\Pagination.js",["113"],"import '../style/pagination.css'\r\nconst { Link } = require(\"react-router-dom\");\r\n\r\nconst Pagination = ({ count, page, pageLink,per_page_post }) => {\r\n\r\n    // console.log(page);\r\n    const totalPage = Math.ceil((count / per_page_post));\r\n    let start = page;\r\n    const diff = totalPage - page;\r\n    // console.log(totalPage);\r\n    if (diff <= 3) {\r\n        start = totalPage - 3;\r\n    }\r\n    let end = start + 3;\r\n    if (start <= 0) {\r\n        start = 1;\r\n    }\r\n    // console.log(end);\r\n    // console.log(start);\r\n    const styles = {\r\n        B1: \"page\",        \r\n      }\r\n    const makePageLink = () => {\r\n        const storePage = [];\r\n        for (let i = start; i <= end; i++) {\r\n            storePage.push(<li className={`${styles.B1} ${ i == page ? 'activeLink' : '' }`} key={i}><Link className=\"linkTag\" to={`${pageLink}/${parseInt(i)}`}>{i}</Link></li>)\r\n        }\r\n        return storePage\r\n    }\r\n    return (\r\n        <div className=\"pagination\">\r\n            {page ? makePageLink() : ''}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination","E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\Editname.js",["114"],"import Sidebar from \"./Sidebar\"\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useState } from \"react\";\r\nimport { postNameMethod } from \"../redux/AsyncMethods/postNameMethod\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Editname = (props) => {\r\n    const {push} = useHistory()\r\n    const { user: { name, _id } } = useSelector((state) => (state.AuthReducer))\r\n    // console.log(name,_id);\r\n    const {redirect} = useSelector((state) => (state.postReducer));\r\n    const { profileError } = useSelector((state) => (state.ProfileReducer))\r\n    const dispatch = useDispatch()\r\n    const [userName, setUserName] = useState('');\r\n    // console.log(profileError);\r\n    const postName = (e) => {\r\n        e.preventDefault();\r\n        dispatch(postNameMethod({ name: userName, id: _id }));\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (redirect) {\r\n            push('/dashboard')\r\n        }\r\n\r\n        if (profileError.length > 0) {\r\n            profileError.map((error) => {\r\n                return (\r\n                    toast.error(error.msg, {\r\n                        position: 'top-center',\r\n                        autoClose: 2000,\r\n                        hideProgressBar: true,\r\n                        closeOnClick: false,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    })\r\n                )\r\n            })\r\n        }\r\n    }, [profileError,redirect])\r\n\r\n    return (\r\n    \r\n    <div className=\"custome_container mt-5\">\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar\r\n                newestOnTop={false}\r\n                closeOnClick={false}\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-3 mb-5 col-sm-12 col-md-12\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-lg-6 col-sm-12 col-md-12\">\r\n                    <form onSubmit={postName}>\r\n                        <div class=\"form-group\">\r\n                            <label htmlFor=\"curr_name\">Current Name: </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                disabled=\"true\"\r\n                                class=\"form-control font-weight-bold text-italic\"\r\n                                id=\"curr_name\"\r\n                                value={name}\r\n                                placeholder=\"curr name\"\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group mt-3\">\r\n                            <label for=\"new_name\">Enter Your New Name: </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                id=\"new_name\"\r\n                                value={userName}\r\n                                placeholder=\"Enter New Name\"\r\n                                autoComplete=\"off\"\r\n                                onChange={(e) => { setUserName(e.target.value) }}\r\n                            />\r\n                        </div>\r\n                        <button type=\"submit\" class=\"btn btn-primary w-100 mt-3\">Confirm</button>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Editname","E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\Sidebar.js",[],"E:\\Web development\\Projects\\I'm blogger\\client\\src\\redux\\AsyncMethods\\postNameMethod.js",[],"E:\\Web development\\Projects\\I'm blogger\\client\\src\\redux\\reducers\\ProfileReducer.js",[],"E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\Changepassword.js",[],"E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\DetailPost.js",["115"],"import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { send_Comment, singlePost } from '../redux/AsyncMethods/fetchAllPost';\r\nimport '../style/DetailPost.css'\r\nimport moment from 'moment'\r\nimport { htmlToText } from 'html-to-text';\r\nimport { SemipolarLoading } from 'react-loadingg';\r\nimport Comments from './Comments';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nconst DetailPost = () => {\r\n    const dispatch = useDispatch()\r\n    const { id } = useParams();\r\n    const history = useHistory()\r\n\r\n    const { user } = useSelector((state) => (state.AuthReducer))\r\n\r\n    const { single_post, loading, comments } = useSelector((state => state.getAllPostReducer))\r\n    const [comment, setComment] = useState('');\r\n    console.log(comments);\r\n    const postComment = (e) => {\r\n        e.preventDefault();\r\n        const commentData = {\r\n            postId: single_post._id,\r\n            comment,\r\n            userName: user.name\r\n        }\r\n\r\n        dispatch(send_Comment({ commentData }))\r\n        setComment('')\r\n    }\r\n    const copyText = (e) => {\r\n        e.preventDefault();\r\n        \r\n    }\r\n    useEffect(() => {\r\n        dispatch({ type: 'ON_LOADING' })\r\n        dispatch(singlePost(id))\r\n    }, [id, dispatch])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"custome_container\">\r\n                <div className=\"row m-auto\">\r\n                    {\r\n                        loading ? <SemipolarLoading\r\n                            size=\"large\"\r\n                            className=\"check\"\r\n                        /> :\r\n\r\n                            <div className=\"col-sm-12 col-md-12 col-12 col-lg-8 m-auto\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header avtar_header\">\r\n                                        <div className=\"avatar_section\">\r\n                                            <span className=\"avatar_icon\">{single_post.user ? single_post.user[0] : ''}</span>\r\n                                        </div>\r\n                                        <div className=\"name_section\">\r\n                                            <div className=\"avtar_name\">\r\n                                                {single_post.user ? single_post.user : ''}\r\n                                            </div>\r\n                                            <span className=\"published_at\">published at:{moment(single_post.updatedAt).format('l')}</span>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"detail_img\">\r\n                                        <img src={`/images/${ single_post.image }`} className=\"img-fluid img-thumbnail\" alt=\"...\"></img>\r\n                                    </div>\r\n                                    <div className=\"slug_div\">\r\n                                        <div className=\"m-3 mb-2\">\r\n                                            <label htmlFor=\"slug\">Copy this slug to share:</label>\r\n                                            <div className=\"slug_input\">\r\n                                                <input type=\"text\" id=\"slug\" className=\"form-control\" disabled=\"on\" value={`/details/${single_post._id}`} />\r\n                                                <div className=\"copy_clip_board\"><i className=\"far fa-copy\" onClick={copyText}></i></div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"card-body\" style={{ padding: '1.25rem' }}>\r\n                                        <h5 className=\"card-title\">{single_post.title}</h5>\r\n                                        <p className=\"card-text\">{htmlToText(single_post.post_body)}</p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"comment_box \">\r\n                                    <div className=\"comment m-3\">\r\n                                        <h3>Add comment...</h3>\r\n                                        <form onSubmit={postComment}>\r\n                                            <div className=\"mb-3\">\r\n                                                <label for=\"Add_comment\" className=\"form-label\">Comment:</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    id=\"Add_comment\"\r\n                                                    value={comment}\r\n                                                    onChange={(e) => setComment(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"submit\">\r\n                                                {\r\n                                                    user.name ? <input type=\"submit\" className=\"btn btn-primary\" value=\"Comment\" /> : <button type=\"submit\" onClick={() => history.push('/login')} className=\"btn btn-primary\" value=\"Submit\" >Login To comment</button>\r\n                                                }\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {\r\n                                    comments.length > 0 ?\r\n                                        <Comments\r\n                                            comment={comments}\r\n                                        /> : ''\r\n                                }\r\n\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DetailPost;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\Comments.js",[],"E:\\Web development\\Projects\\I'm blogger\\client\\src\\components\\auth\\Forget.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":23,"column":8,"nodeType":"122","endLine":23,"endColumn":14,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":27,"column":11,"nodeType":"126","messageId":"127","endLine":27,"endColumn":23},{"ruleId":"120","severity":1,"message":"128","line":52,"column":8,"nodeType":"122","endLine":52,"endColumn":14,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":26,"column":62,"nodeType":"132","messageId":"133","endLine":26,"endColumn":64},{"ruleId":"120","severity":1,"message":"134","line":49,"column":8,"nodeType":"122","endLine":49,"endColumn":31,"suggestions":"135"},{"ruleId":"124","severity":1,"message":"136","line":10,"column":8,"nodeType":"126","messageId":"127","endLine":10,"endColumn":12},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["139"],"no-unused-vars","'copyFunction' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: '_id' and 'dispatch'. Either include them or remove the dependency array.",["140"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'push'. Either include it or remove the dependency array.",["141"],"'copy' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [dispatch, page]",{"range":"148","text":"149"},"Update the dependencies array to be: [_id, dispatch, page]",{"range":"150","text":"151"},"Update the dependencies array to be: [profileError, push, redirect]",{"range":"152","text":"153"},[817,823],"[dispatch, page]",[1900,1906],"[_id, dispatch, page]",[1647,1670],"[profileError, push, redirect]"]